import { styled, keyframes } from "styled-components";
import {
  alwaysBlack,
  alwaysWhite,
  darkGreyColor,
  primaryColor,
  secondaryColor,
  textPrimaryColorContrast,
} from "../Styles/Styles";
import { Link } from "react-router-dom";
import { Helmet } from "react-helmet";
import { MyButton } from "./Components/ItemsLibrary";
import axios from "axios";
import { io } from "socket.io-client";
import { notifyError } from "../Routes/NewStudentAsaas/FunctionLessons";

// import { levels } from "../Routes/Ranking/RankingComponents/RankingLevelsList";

// const items = levels();

// export function updateScore(
//   totalScore,
//   flashcards25Reviews,
//   homeworkAssignmentsDone
// ) {
//   var level = 1;
//   var color = "#000";
//   var card =
//     "https://ik.imagekit.io/vjz75qw96/assets/icons/level%20(10).png?updatedAt=1719515621171";
//   var icon = "fa fa-clone";
//   var color = "#eee";
//   var textcolor = "black";
//   var text = "White Belt";
//   var discount = "0%";
//   var backgroundcolor = "#ccc";
//   var image2 =
//     "https://ik.imagekit.io/vjz75qw96/assets/pngs/1.png?updatedAt=1715899265785";
//   var image =
//     "https://ik.imagekit.io/vjz75qw96/assets/pngs/white.png?updatedAt=1715899271696";
//   var background =
//     "https://ik.imagekit.io/vjz75qw96/assets/assets_for_classes/ASSETS%20AND%20LIABILITIES.jpg?updatedAt=1692919364512";
//   for (let i = 0; i < items.length; i++) {
//     if (
//       totalScore >= items[i].totalScore &&
//       flashcards25Reviews >= items[i].flashcards25Reviews &&
//       homeworkAssignmentsDone >= items[i].homeworkAssignmentsDone
//     ) {
//       level = items[i].level;
//       color = items[i].color;
//       icon = items[i].icon;
//       card = items[i].card || card;
//       textcolor = items[i].textcolor;
//       text = items[i].text;
//       discount = items[i].discount || discount;
//       backgroundcolor = items[i].backgroundcolor;
//       image2 = items[i].image2 || image2;
//       image = items[i].image || image;
//       background = items[i].background || background;
//     }
//   }

//   return {
//     level,
//     color,
//     icon,
//     card,
//     image,
//     image2,
//     textcolor,
//     text,
//     discount,
//     backgroundcolor,
//     background,
//   };
// }

export const UniversalButtonsDivFlex = styled.div`
  display: flex;
  margin-top: 2rem;
  justify-content: space-evenly;
  gap: 0.5rem;
`;
export const SpanHover = styled.span`
  padding: 0 8px;
  font-weight: 500;
  gap: 5px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: solid #66666600 2px;
  &:hover {
    color: ${secondaryColor()};
    transition: 0.2s;
  }
`;
export const SpanHover2 = styled.span`
  padding-left: 10px;
  border-left: solid ${secondaryColor()} 2px;
  &:hover {
    color: ${secondaryColor()};
    border-left: solid ${alwaysWhite()} 2px;
  }
`;
export const FormFlex = styled.form`
  display: flex;
  padding: 0.5rem;
  justify-content: space-around;
  gap: 2rem;
  @media (max-width: 750px) {
    flex-direction: column;
  }
`;
export const FormGrid = styled.form`
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 1fr;
  @media (max-width: 675px) {
    grid-template-columns: 1fr;
  }
`;
export const DivGrid = styled.div`
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 1fr 1fr;
  @media (max-width: 675px) {
    grid-template-columns: 1fr;
  }
`;
export const DivMarginBorder = styled.div.attrs({
  className: "box-shadow-white",
})`
  padding: 10px;
  margin: 0.5rem;
  height: fit-content;
  background-color: rgb(243, 243, 243);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
`;
export const DivFlex = styled.div`
  display: block;
  align-content: center;
  grid-template-columns: 1fr;
`;

export const Button = styled.button`
  border: 1px solid ${primaryColor()};
  background-color: ${primaryColor()};
  cursor: pointer;
  color: ${textPrimaryColorContrast()};
  padding: 0.4rem;
  width: 5.5rem;
  max-height: 2rem;
  &:hover {
    border: 1px solid ${darkGreyColor()};
  }
  &:active {
    font-size: 0.8rem;
  }
`;

const spinAnimation = keyframes`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`;

export const Spin = styled.div`
  width: 80px;
  height: 80px;
  display: grid;
  padding: 1rem;
  justify-content: center;
  align-items: center;
  animation-name: ${spinAnimation};
  animation-duration: 5000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  transform: rotate(0.03turn);
`;

export const SpinLoading = () => {
  return (
    <Spin>
      <img
        style={{ maxWidth: "3rem" }}
        src="https://ik.imagekit.io/vjz75qw96/assets/assets_for_classes/Spin.png?updatedAt=1703334149713"
        alt="loading"
      />
    </Spin>
  );
};

export function InputField({ value, onChange, id, placeholder, type }) {
  return (
    <div
      style={{
        display: "grid",
        alignItems: "center",
        justifyContent: "space-around",
      }}
    >
      <p
        style={{
          margin: 0,
          marginBottom: "3px",
          fontWeight: 500,
          textAlign: "right",
        }}
      >
        {placeholder}
      </p>
      <input
        style={{
          alignItems: "center",
          justifyContent: "space-around",
          padding: "0.4rem",
          marginBottom: "0.3rem",
          fontSize: "1rem",
          fontWeight: 500,
          backgroundColor: "white",
          minWidth: "15rem",
          border: "#555 1px solid",
        }}
        value={value}
        onChange={onChange}
        id={id}
        placeholder={placeholder}
        type={type}
        required
      />
    </div>
  );
}

export function InputFieldNotRequired({
  value,
  onChange,
  id,
  placeholder,
  type,
}) {
  return (
    <div
      style={{
        display: "grid",
        alignItems: "center",
        justifyContent: "space-around",
      }}
    >
      <p
        style={{
          margin: 0,
          marginBottom: "3px",
          fontWeight: 500,
          textAlign: "right",
        }}
      >
        {placeholder}
      </p>
      <input
        style={{
          alignItems: "center",
          justifyContent: "space-around",
          padding: "0.4rem",
          marginBottom: "0.3rem",
          fontWeight: 500,
          backgroundColor: "white",
          minWidth: "15rem",
          border: "#555 1px solid",
        }}
        value={value}
        onChange={onChange}
        id={id}
        placeholder={placeholder}
        type={type}
      />
    </div>
  );
}

export const ImgResponsive0 = styled.img`
  max-width: 3.5rem;
  margin-right: 1rem;
  @media (max-width: 755px) {
    display: none;
  }
`;
export const ImgResponsive3 = styled.img`
  max-width: 3rem;
  @media (max-width: 755px) {
    display: none;
  }
`;
export const DivDis = styled.span`
  @media (max-width: 755px) {
    display: none;
  }
`;
export const ImgResponsive = styled.img`
  max-width: 15rem;
  margin: 1rem;
  @media (max-width: 800px) {
    max-width: 10rem;
    transition: 0.2s;
  }
`;
export const ImgResponsive2 = styled.img`
  max-width: 25rem;
  @media (max-width: 600px) {
    max-width: 15rem;
  }
`;
export const ButtonDisapear = styled.button`
  border: 1px solid ${primaryColor()};
  background-color: ${primaryColor()};
  cursor: pointer;
  color: ${textPrimaryColorContrast()};
  padding: 0.5rem;
  width: 5rem;
  margin-right: 3rem;

  &:hover {
    border: 1px solid ${darkGreyColor()};
  }
  &:active {
    font-size: 0.8rem;
  }
  @media (max-width: 1300px) {
    margin-right: 4rem;
  }

  @media (max-width: 1350px) {
    display: none;
  }
`;

export const Xp = styled.p`
  cursor: pointer;
  font-weight: 900;
  position: absolute;
  top: -5px;
  right: 5px;
  font-size: 1.2rem;
  padding: 0.5rem;
  color: ${primaryColor()};
  &:hover {
    color: ${secondaryColor()};
  }
  &:active {
    font-weight: 500;
  }
`;

export const linkReset = {
  display: "inline",
  color: alwaysWhite(),
};

export const linkReset2 = {
  display: "inline",
  backgroundColor: alwaysBlack(),
  padding: "1px",
};

export const ContainerClass = styled.div`
  position: relative;
  width: 100%;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 98%;
    height: 100%;
  }
`;
export const IFrameVideoClass = styled.iframe`
  min-width: 98%;
  min-height: 100%;
  border: none;
`;
export const abreviateName = (word) => {
  const words = word.split(" ");
  const lastWord = words[words.length - 1];
  return lastWord;
};

export const SpanCourseResponsive = styled.span`
  @media (max-width: 500px) {
    display: none;
  }
`;

export const pathGenerator = (text) => {
  const cleanText = text.replace(/[^a-zA-Z0-9\s]/g, "");
  const spacelessText = cleanText.replace(/\s+/g, "-");
  const lowerCase = spacelessText.toLowerCase();
  return lowerCase;
};

const fadeIn = keyframes`
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transfor: translateX(0);
  }
`;

export const DivModal = styled.div`
  position: fixed;
  z-index: 100;
  background-color: #fff;
  padding: 1rem;
  width: 25rem;
  height: 32rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  @media (max-width: 700px) {
    width: 100%;
    width: 20rem;
    height: 32rem;
  }
`;

export const DisapearOnMobile = styled.div`
  display: block;
  @media (max-width: 600px) {
    display: none;
  }
`;

export const DisapearOnWeb = styled.div`
  display: none;
  @media (max-width: 600px) {
    display: block;
  }
`;

export const BackToHomePage = () => {
  return (
    <MyButton>
      <Link
        style={{
          ...linkReset,
          backgroundColor: primaryColor(),
          color: textPrimaryColorContrast(),
          padding: "0.4rem",
          borderRadius: "6px",
          fontSize: "12px",
          textDecoration: "none",
        }}
        to="/"
      >
        Voltar à página inicial
      </Link>
    </MyButton>
  );
};

export function formatNumber(number) {
  return number.toLocaleString("pt-BR");
}

export function formatDate(dateString) {
  const options = {
    year: "numeric",
    month: "short",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
  };
  const date = new Date(dateString);
  return date.toLocaleDateString("en-US", options);
}

export function formatDateBrContract(dateString) {
  const [year, month, day] = dateString.split("-").map(Number);
  const date = new Date(year, month - 1, day);

  const options = {
    year: "numeric",
    month: "numeric",
    day: "numeric",
  };

  return date.toLocaleDateString("pt-BR", options);
}
export function formatDateBr(dateString) {
  const options = {
    year: "numeric",
    month: "numeric",
    day: "numeric",
  };
  const date = new Date(dateString);
  return date.toLocaleDateString("pt-BR", options);
}

export function getVideoEmbedUrl(videoUrl) {
  let embedUrl = "";
  if (!videoUrl) {
    return "";
  }
  if (videoUrl.includes("youtube.com")) {
    const youtubeIdMatch = videoUrl.match(
      /(?:\?v=|\/embed\/|\/watch\?v=|\/\d\/|\.be\/)([\w\d_-]+)/i
    );

    if (youtubeIdMatch && youtubeIdMatch[1]) {
      embedUrl = `https://www.youtube.com/embed/${youtubeIdMatch[1]}`;
    }
  } else if (videoUrl.includes("vimeo.com")) {
    const vimeoIdMatch = videoUrl.match(/vimeo\.com\/(\d+)/);

    if (vimeoIdMatch && vimeoIdMatch[1]) {
      embedUrl = `https://player.vimeo.com/video/${vimeoIdMatch[1]}`;
    }
  }

  return embedUrl;
}

export function TitlePage(title) {
  return (
    <Helmet>
      <title>{title} | Arthur Vincent</title>
    </Helmet>
  );
}

export function LogoSVG(primaryColor, secondaryColor, size) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      zoomAndPan="magnify"
      viewBox="0 0 1920 1079.999946"
      width={size * 100}
      height={size * 40}
      preserveAspectRatio="xMidYMid meet"
      version="1.0"
    >
      <defs>
        <g />
        <clipPath id="5d61e45518">
          <path
            d="M 306.808594 268.875 L 387.367188 268.875 L 387.367188 349.4375 L 306.808594 349.4375 Z M 306.808594 268.875 "
            clipRule="nonzero"
          />
        </clipPath>
        <clipPath id="7b58fb1cd7">
          <path
            d="M 295.707031 257.773438 L 398.71875 257.773438 L 398.71875 360.589844 L 295.707031 360.589844 Z M 295.707031 257.773438 "
            clipRule="nonzero"
          />
        </clipPath>
        <clipPath id="c05dfe6a57">
          <path
            d="M 7 75 L 934 75 L 934 976 L 7 976 Z M 7 75 "
            clipRule="nonzero"
          />
        </clipPath>
        <clipPath id="3bd790aea6">
          <path
            d="M 136.515625 -92.472656 L 1073.644531 160.539062 L 815.8125 1115.519531 L -121.316406 862.503906 Z M 136.515625 -92.472656 "
            clipRule="nonzero"
          />
        </clipPath>
        <clipPath id="7db89cc0fd">
          <path
            d="M 136.515625 -92.472656 L 1073.644531 160.539062 L 815.8125 1115.519531 L -121.316406 862.503906 Z M 136.515625 -92.472656 "
            clipRule="nonzero"
          />
        </clipPath>
      </defs>
      <g clipPath="url(#5d61e45518)">
        <path
          fill={secondaryColor}
          d="M 387.421875 309.183594 C 387.421875 310.5 387.355469 311.820312 387.226562 313.132812 C 387.097656 314.445312 386.902344 315.75 386.644531 317.046875 C 386.386719 318.339844 386.066406 319.617188 385.683594 320.882812 C 385.300781 322.144531 384.859375 323.386719 384.351562 324.605469 C 383.847656 325.824219 383.285156 327.015625 382.660156 328.183594 C 382.039062 329.347656 381.359375 330.476562 380.628906 331.574219 C 379.894531 332.671875 379.109375 333.730469 378.269531 334.75 C 377.433594 335.773438 376.546875 336.75 375.613281 337.683594 C 374.683594 338.617188 373.703125 339.5 372.683594 340.339844 C 371.664062 341.175781 370.605469 341.960938 369.507812 342.695312 C 368.410156 343.429688 367.277344 344.105469 366.113281 344.726562 C 364.949219 345.351562 363.757812 345.914062 362.539062 346.417969 C 361.320312 346.925781 360.078125 347.367188 358.816406 347.75 C 357.550781 348.136719 356.273438 348.457031 354.976562 348.714844 C 353.683594 348.96875 352.378906 349.164062 351.066406 349.292969 C 349.75 349.421875 348.433594 349.488281 347.113281 349.488281 C 345.792969 349.488281 344.476562 349.421875 343.164062 349.292969 C 341.851562 349.164062 340.546875 348.96875 339.25 348.714844 C 337.957031 348.457031 336.675781 348.136719 335.414062 347.75 C 334.152344 347.367188 332.910156 346.925781 331.691406 346.417969 C 330.46875 345.914062 329.277344 345.351562 328.113281 344.726562 C 326.949219 344.105469 325.820312 343.429688 324.722656 342.695312 C 323.625 341.960938 322.566406 341.175781 321.542969 340.339844 C 320.523438 339.5 319.546875 338.617188 318.613281 337.683594 C 317.679688 336.75 316.796875 335.773438 315.957031 334.75 C 315.121094 333.730469 314.335938 332.671875 313.601562 331.574219 C 312.867188 330.476562 312.191406 329.347656 311.566406 328.183594 C 310.945312 327.015625 310.382812 325.824219 309.875 324.605469 C 309.371094 323.386719 308.925781 322.144531 308.542969 320.882812 C 308.160156 319.617188 307.839844 318.339844 307.582031 317.046875 C 307.324219 315.75 307.132812 314.445312 307.003906 313.132812 C 306.875 311.820312 306.808594 310.5 306.808594 309.183594 C 306.808594 307.863281 306.875 306.542969 307.003906 305.230469 C 307.132812 303.917969 307.324219 302.613281 307.582031 301.320312 C 307.839844 300.023438 308.160156 298.746094 308.542969 297.480469 C 308.925781 296.21875 309.371094 294.976562 309.875 293.757812 C 310.382812 292.539062 310.945312 291.347656 311.566406 290.183594 C 312.191406 289.015625 312.867188 287.886719 313.601562 286.789062 C 314.335938 285.691406 315.121094 284.632812 315.957031 283.613281 C 316.796875 282.589844 317.679688 281.613281 318.613281 280.679688 C 319.546875 279.746094 320.523438 278.863281 321.542969 278.023438 C 322.566406 277.1875 323.625 276.402344 324.722656 275.667969 C 325.820312 274.933594 326.949219 274.257812 328.113281 273.636719 C 329.277344 273.011719 330.46875 272.449219 331.691406 271.945312 C 332.910156 271.4375 334.152344 270.996094 335.414062 270.613281 C 336.675781 270.226562 337.957031 269.90625 339.25 269.648438 C 340.546875 269.394531 341.851562 269.199219 343.164062 269.070312 C 344.476562 268.941406 345.792969 268.875 347.113281 268.875 C 348.433594 268.875 349.75 268.941406 351.066406 269.070312 C 352.378906 269.199219 353.683594 269.394531 354.976562 269.648438 C 356.273438 269.90625 357.550781 270.226562 358.816406 270.613281 C 360.078125 270.996094 361.320312 271.4375 362.539062 271.945312 C 363.757812 272.449219 364.949219 273.011719 366.113281 273.636719 C 367.277344 274.257812 368.410156 274.933594 369.507812 275.667969 C 370.605469 276.402344 371.664062 277.1875 372.683594 278.023438 C 373.703125 278.863281 374.683594 279.746094 375.613281 280.679688 C 376.546875 281.613281 377.433594 282.589844 378.269531 283.613281 C 379.109375 284.632812 379.894531 285.691406 380.628906 286.789062 C 381.359375 287.886719 382.039062 289.015625 382.660156 290.183594 C 383.285156 291.347656 383.847656 292.539062 384.351562 293.757812 C 384.859375 294.976562 385.300781 296.21875 385.683594 297.480469 C 386.066406 298.746094 386.386719 300.023438 386.644531 301.320312 C 386.902344 302.613281 387.097656 303.917969 387.226562 305.230469 C 387.355469 306.542969 387.421875 307.863281 387.421875 309.183594 Z M 387.421875 309.183594 "
          fillOpacity="1"
          fillRule="nonzero"
        />
      </g>
      <g clipPath="url(#7b58fb1cd7)">
        <path
          fill={primaryColor}
          d="M 347.117188 257.769531 C 318.722656 257.769531 295.707031 280.796875 295.707031 309.1875 C 295.707031 337.574219 318.722656 360.589844 347.117188 360.589844 C 375.507812 360.589844 398.523438 337.574219 398.523438 309.1875 C 398.523438 280.796875 375.507812 257.769531 347.117188 257.769531 Z M 347.117188 334.261719 C 333.308594 334.261719 322.109375 323.070312 322.109375 309.265625 C 322.109375 295.460938 333.308594 284.269531 347.117188 284.269531 C 360.921875 284.269531 372.109375 295.460938 372.109375 309.265625 C 372.109375 323.070312 360.921875 334.261719 347.117188 334.261719 Z M 347.117188 334.261719 "
          fillOpacity="1"
          fillRule="nonzero"
        />
      </g>
      <g clipPath="url(#c05dfe6a57)">
        <g clipPath="url(#3bd790aea6)">
          <g clipPath="url(#7db89cc0fd)">
            <path
              fill={primaryColor}
              d="M 785.28125 298.164062 C 823.511719 307.527344 859.539062 322.230469 894.019531 340.535156 C 843.402344 240.945312 762.324219 167.003906 626.824219 139.414062 C 650.582031 127.265625 675.753906 118.371094 702.050781 111.691406 C 379.503906 -26.867188 266.394531 281.5 94.980469 206.898438 C 96.566406 282.535156 129.695312 329.941406 202.144531 342.996094 C 187.933594 350.257812 175.171875 359.25 163.335938 369.070312 C 231.035156 362.851562 288.421875 385.617188 331.316406 450.015625 C 253.019531 423.902344 185.679688 432.320312 130.941406 481.265625 C 59.957031 433.011719 77.367188 364.996094 152.304688 345.421875 C 18.929688 343.285156 5.414062 507.460938 137.664062 550.632812 C 149.671875 481.347656 237.550781 457.804688 309.824219 484.972656 C 408.175781 521.859375 444.464844 627.722656 354.089844 700.921875 C 379.027344 637.613281 366.066406 568.667969 253.671875 546.933594 C 301.890625 590.1875 273.003906 648.984375 199.128906 647.601562 C 127.714844 646.308594 28.753906 593.945312 25.367188 485.292969 C -61.304688 746.070312 177.507812 919.050781 385.902344 861.644531 C 354.644531 905.832031 305.035156 927.265625 242.066406 932.269531 C 379.234375 997.625 557.214844 984.824219 651.621094 832.917969 C 655 887.03125 639.09375 934.59375 606.5 975.933594 C 739.316406 929.121094 883.261719 824.078125 832.375 592.949219 C 868.476562 637.140625 891.40625 688.304688 905.289062 743.910156 C 958.183594 587.6875 947.121094 436.582031 785.28125 298.164062 Z M 629.039062 404.097656 C 869.28125 520.050781 827.878906 787.503906 697.457031 888.542969 C 720.773438 799.347656 712.191406 719.144531 656.75 652.316406 C 669.023438 865.554688 486.636719 936.492188 385.144531 933.203125 C 574.699219 864.777344 676.496094 643.675781 473.566406 493.015625 C 505.007812 496.335938 535.371094 507.210938 564.917969 523.226562 C 502.851562 439.109375 417.625 376.296875 285.5625 356.523438 C 306.601562 353.019531 330.730469 359.339844 351.125 344.753906 C 338.617188 345.011719 326.328125 343.035156 314.453125 338.105469 C 332.117188 337.898438 356.292969 331.988281 365.082031 315.035156 C 362.183594 316.546875 358.765625 317.15625 355.378906 316.242188 C 348.601562 314.410156 344.5625 307.390625 346.394531 300.613281 C 348.222656 293.832031 355.246094 289.796875 362.023438 291.628906 C 364.34375 292.253906 366.160156 293.316406 367.652344 294.871094 C 366.863281 289.296875 364.738281 282.984375 361.285156 275.925781 C 380.355469 286.816406 385.242188 303.445312 378.796875 324.476562 C 407.980469 300.015625 416.769531 251.871094 450.929688 239.46875 C 392.027344 225.859375 338.269531 241.390625 279.835938 284.171875 C 229.40625 320.695312 179.625 312.996094 142.964844 260.230469 C 303.65625 259.027344 346.078125 106.863281 563.453125 120.390625 C 537.59375 134.652344 516.53125 153.839844 499.511719 177.1875 C 604.226562 161.445312 692.195312 192.847656 771.59375 248.921875 C 697.402344 233.101562 629.890625 236.5 568.652344 259.195312 C 796.226562 295.1875 885.597656 457.480469 892.242188 610.070312 C 847.210938 513.902344 750.804688 420.898438 629.039062 404.097656 Z M 629.039062 404.097656 "
              fillOpacity="1"
              fillRule="evenodd"
            />
          </g>
        </g>
      </g>
      <path
        strokeLinecap="butt"
        transform="matrix(0.616417, 0, 0, 0.616417, 498.130898, 53.271467)"
        fill="none"
        strokeLinejoin="miter"
        d="M 91.484339 718.754445 C 110.39401 646.835595 131.718085 573.231097 155.469239 497.940951 C 179.214057 422.53674 202.623012 355.288274 225.696105 296.201891 L 372.905101 296.201891 C 395.978194 355.288274 419.387149 422.53674 443.131966 497.940951 C 466.883121 573.231097 488.207196 646.835595 507.116867 718.754445 L 399.24176 725.002748 C 391.9225 699.230084 382.24587 660.510886 370.20553 608.851491 L 228.395676 608.851491 C 214.105694 663.210457 204.422726 701.929655 199.359446 725.002748 Z M 344.711695 516.844285 C 332.671355 475.317787 319.274893 432.885095 304.534982 389.558883 L 294.237323 389.558883 C 280.390932 427.821815 266.772675 470.254507 253.382549 516.844285 Z M 539.606773 398.671519 L 632.963765 398.671519 L 637.184221 465.020128 L 644.104248 465.020128 C 656.486786 442.396963 670.612006 425.236311 686.479906 413.531833 C 702.461873 401.713289 722.214367 395.807185 745.731052 395.807185 C 749.444546 395.807185 754.400096 397.663933 760.591366 401.377427 C 766.782635 405.090921 771.503716 408.804415 774.767282 412.51791 L 764.30486 501.654446 L 735.26863 501.654446 C 695.649576 501.654446 664.534803 512.009138 641.911638 532.718522 L 641.911638 725.002748 L 539.606773 725.002748 Z M 959.402723 731.922774 C 931.716278 731.922774 907.014571 728.938038 885.291263 722.974901 C 869.19523 711.38449 855.969868 698.944918 845.615175 685.662522 C 835.26682 672.272397 830.089474 658.882271 830.089474 645.485809 L 830.089474 484.43676 L 766.440436 484.43676 L 778.937041 398.671519 L 830.089474 398.671519 L 830.089474 312.912615 L 933.066064 312.912615 L 933.066064 398.671519 L 1040.26311 398.671519 L 1027.772841 484.43676 L 933.066064 484.43676 L 933.066064 599.903618 C 933.066064 612.286157 934.24475 622.640849 936.608459 630.967694 C 945.727432 633.781332 955.853991 635.18815 967.000811 635.18815 C 992.323546 635.18815 1014.211617 629.839705 1032.671359 619.14915 L 1047.861198 709.806572 C 1036.384853 717.119494 1023.723485 722.639039 1009.877094 726.352533 C 996.037041 730.066027 979.21225 731.922774 959.402723 731.922774 Z M 1076.884753 261.088458 L 1179.189619 261.088458 L 1179.189619 387.531036 L 1175.811987 446.953281 L 1179.861343 446.953281 C 1194.721657 429.063871 1211.318315 415.38858 1229.663991 405.933745 C 1248.123732 396.47891 1269.340078 391.751492 1293.313029 391.751492 C 1325.612824 391.751492 1350.485631 399.799509 1367.925113 415.895542 C 1385.484998 431.985238 1394.261772 455.736392 1394.261772 487.136331 L 1394.261772 725.002748 L 1291.956906 725.002748 L 1291.956906 496.084204 C 1281.830347 491.920782 1268.440222 489.835902 1251.780194 489.835902 C 1222.294035 489.835902 1198.099289 497.205857 1179.189619 511.952105 L 1179.189619 725.002748 L 1076.884753 725.002748 Z M 1545.684886 730.572989 C 1513.942749 730.572989 1489.51987 721.960978 1472.416251 704.743292 C 1455.42036 687.41154 1446.922415 661.638876 1446.922415 627.4253 L 1446.922415 398.671519 L 1550.577066 398.671519 L 1550.577066 630.967694 C 1561.159891 634.681189 1572.921402 636.537936 1585.861599 636.537936 C 1613.997972 636.537936 1635.664246 628.661019 1650.854085 612.907185 L 1650.854085 398.671519 L 1754.508736 398.671519 L 1754.508736 725.002748 L 1663.350691 725.002748 L 1659.130235 675.2001 L 1653.559993 675.2001 C 1638.813746 693.653505 1623.224674 707.499896 1606.792779 716.726598 C 1590.47495 725.959638 1570.107765 730.572989 1545.684886 730.572989 Z M 1814.000689 398.671519 L 1907.357681 398.671519 L 1911.578137 465.020128 L 1918.498163 465.020128 C 1930.880702 442.396963 1945.005922 425.236311 1960.873822 413.531833 C 1976.855789 401.713289 1996.608283 395.807185 2020.131305 395.807185 C 2023.844799 395.807185 2028.794012 397.663933 2034.985282 401.377427 C 2041.176551 405.090921 2045.903969 408.804415 2049.167535 412.51791 L 2038.698776 501.654446 L 2009.662546 501.654446 C 1970.043491 501.654446 1938.928719 512.009138 1916.305554 532.718522 L 1916.305554 725.002748 L 1814.000689 725.002748 Z M 1814.000689 398.671519 "
        stroke={primaryColor}
        strokeWidth="104.586655"
        strokeOpacity="1"
        strokeMiterlimit="4"
      />
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(543.909522, 500.174088)">
          <g>
            <path d="M 10.65625 -3.84375 C 22.300781 -48.164062 35.441406 -93.554688 50.078125 -140.015625 C 64.710938 -186.472656 79.132812 -227.890625 93.34375 -264.265625 L 184.140625 -264.265625 C 198.335938 -227.890625 212.753906 -186.472656 227.390625 -140.015625 C 242.023438 -93.554688 255.171875 -48.164062 266.828125 -3.84375 L 200.328125 0 C 195.785156 -15.914062 189.816406 -39.785156 182.421875 -71.609375 L 95.046875 -71.609375 C 86.242188 -38.078125 80.28125 -14.207031 77.15625 0 Z M 166.65625 -128.296875 C 159.269531 -153.867188 151.03125 -180.007812 141.9375 -206.71875 L 135.546875 -206.71875 C 127.015625 -183.132812 118.628906 -156.992188 110.390625 -128.296875 Z M 166.65625 -128.296875 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(803.48931, 500.174088)">
          <g>
            <path d="M 27.28125 -201.1875 L 84.828125 -201.1875 L 87.375 -160.265625 L 91.640625 -160.265625 C 99.316406 -174.191406 108.054688 -184.773438 117.859375 -192.015625 C 127.660156 -199.265625 139.804688 -202.890625 154.296875 -202.890625 C 156.566406 -202.890625 159.617188 -201.75 163.453125 -199.46875 C 167.296875 -197.195312 170.210938 -194.925781 172.203125 -192.65625 L 165.8125 -137.671875 L 147.90625 -137.671875 C 123.46875 -137.671875 104.285156 -131.28125 90.359375 -118.5 L 90.359375 0 L 27.28125 0 Z M 27.28125 -201.1875 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(966.312787, 500.174088)">
          <g>
            <path d="M 123.1875 4.265625 C 106.132812 4.265625 90.929688 2.414062 77.578125 -1.28125 C 67.628906 -8.382812 59.457031 -16.054688 53.0625 -24.296875 C 46.664062 -32.535156 43.46875 -40.773438 43.46875 -49.015625 L 43.46875 -148.328125 L 4.265625 -148.328125 L 11.9375 -201.1875 L 43.46875 -201.1875 L 43.46875 -254.03125 L 106.984375 -254.03125 L 106.984375 -201.1875 L 173.046875 -201.1875 L 165.375 -148.328125 L 106.984375 -148.328125 L 106.984375 -77.15625 C 106.984375 -69.476562 107.691406 -63.082031 109.109375 -57.96875 C 114.796875 -56.257812 121.050781 -55.40625 127.875 -55.40625 C 143.5 -55.40625 156.992188 -58.675781 168.359375 -65.21875 L 177.734375 -9.375 C 170.628906 -4.832031 162.816406 -1.425781 154.296875 0.84375 C 145.773438 3.125 135.40625 4.265625 123.1875 4.265625 Z M 123.1875 4.265625 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(1134.677358, 500.174088)">
          <g>
            <path d="M 27.28125 -286 L 90.359375 -286 L 90.359375 -208 L 88.234375 -171.34375 L 90.78125 -171.34375 C 99.875 -182.425781 110.101562 -190.878906 121.46875 -196.703125 C 132.84375 -202.523438 145.914062 -205.4375 160.6875 -205.4375 C 180.582031 -205.4375 195.925781 -200.460938 206.71875 -190.515625 C 217.519531 -180.578125 222.921875 -165.945312 222.921875 -146.625 L 222.921875 0 L 159.84375 0 L 159.84375 -141.078125 C 153.582031 -143.640625 145.335938 -144.921875 135.109375 -144.921875 C 116.929688 -144.921875 102.015625 -140.375 90.359375 -131.28125 L 90.359375 0 L 27.28125 0 Z M 27.28125 -286 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(1365.272927, 500.174088)">
          <g>
            <path d="M 85.671875 3.40625 C 66.066406 3.40625 51.003906 -1.921875 40.484375 -12.578125 C 29.972656 -23.234375 24.71875 -39.070312 24.71875 -60.09375 L 24.71875 -201.1875 L 88.65625 -201.1875 L 88.65625 -57.96875 C 95.1875 -55.695312 102.429688 -54.5625 110.390625 -54.5625 C 127.722656 -54.5625 141.078125 -59.390625 150.453125 -69.046875 L 150.453125 -201.1875 L 214.390625 -201.1875 L 214.390625 0 L 158.140625 0 L 155.578125 -30.6875 L 152.171875 -30.6875 C 143.078125 -19.320312 133.484375 -10.796875 123.390625 -5.109375 C 113.304688 0.566406 100.734375 3.40625 85.671875 3.40625 Z M 85.671875 3.40625 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(1589.048547, 500.174088)">
          <g>
            <path d="M 27.28125 -201.1875 L 84.828125 -201.1875 L 87.375 -160.265625 L 91.640625 -160.265625 C 99.316406 -174.191406 108.054688 -184.773438 117.859375 -192.015625 C 127.660156 -199.265625 139.804688 -202.890625 154.296875 -202.890625 C 156.566406 -202.890625 159.617188 -201.75 163.453125 -199.46875 C 167.296875 -197.195312 170.210938 -194.925781 172.203125 -192.65625 L 165.8125 -137.671875 L 147.90625 -137.671875 C 123.46875 -137.671875 104.285156 -131.28125 90.359375 -118.5 L 90.359375 0 L 27.28125 0 Z M 27.28125 -201.1875 " />
          </g>
        </g>
      </g>
      <path
        strokeLinecap="butt"
        transform="matrix(0.767682, 0, 0, 0.767682, 465.367925, 373.254877)"
        fill="none"
        strokeLinejoin="miter"
        d="M 128.236085 582.998481 C 107.541693 536.729953 86.709915 481.968938 65.74584 418.710349 C 44.868267 355.360169 27.379546 295.174954 13.284767 238.149616 L 96.652586 234.353693 C 106.590168 277.640439 118.878577 324.000558 133.522899 373.434052 C 148.162134 422.867545 162.124615 466.0627 175.405255 503.024604 L 180.966841 503.024604 C 194.339072 466.785248 208.393144 423.859777 223.123969 374.248191 C 237.941296 324.631516 250.36709 278.001713 260.401352 234.353693 L 344.308537 238.149616 C 330.20867 295.174954 312.679243 355.360169 291.710079 418.710349 C 270.837594 481.968938 250.051612 536.729953 229.357219 582.998481 Z M 372.554067 210.499425 L 455.7845 210.499425 L 455.7845 284.779419 L 372.554067 284.779419 Z M 373.093434 320.972979 L 455.240045 320.972979 L 455.240045 582.998481 L 373.093434 582.998481 Z M 512.448565 320.972979 L 587.954855 320.972979 L 591.343708 362.046284 L 595.816383 362.046284 C 618.317146 330.961445 648.094275 315.416481 685.142681 315.416481 C 710.360632 315.416481 729.518337 322.102597 742.620884 335.479916 C 755.723431 348.760556 762.277249 367.602782 762.277249 392.006594 L 762.277249 582.998481 L 680.670006 582.998481 L 680.670006 398.102459 C 673.261342 394.759401 663.456057 393.090417 651.254151 393.090417 C 626.855427 393.090417 607.789313 399.008188 594.05072 410.843732 L 594.05072 582.998481 L 512.448565 582.998481 Z M 933.302381 588.560067 C 885.227481 588.560067 850.34672 577.08071 828.655008 554.127082 C 807.059974 531.173455 796.257369 498.414543 796.257369 455.850346 C 796.257369 413.647423 808.189592 380.074372 832.043861 355.131193 C 855.903217 330.101511 888.392446 317.584126 929.506458 317.584126 C 970.533968 317.584126 1004.020517 325.175971 1029.955928 340.359661 L 1029.955928 360.418007 C 1029.955928 380.751125 1027.559307 400.90615 1022.771152 420.877993 L 954.449637 420.877993 L 949.976962 395.934814 C 942.568299 394.398127 933.70945 393.629784 923.410594 393.629784 C 908.588178 393.629784 896.162384 395.120675 886.133211 398.102459 C 880.978694 415.092519 878.40398 433.212197 878.40398 452.461493 C 878.40398 472.886201 882.561177 487.840914 890.87557 497.33072 C 899.189963 506.728936 914.09888 511.425499 935.607411 511.425499 C 961.817594 511.425499 984.949314 503.431673 1005.012749 487.433845 L 1041.613379 546.942307 C 1027.152237 559.866761 1011.291795 570.03332 994.032051 577.441984 C 976.863898 584.850647 956.617282 588.560067 933.302381 588.560067 Z M 1189.237107 586.387334 C 1145.227813 586.387334 1111.476669 575.274339 1087.978586 553.04326 C 1064.485592 530.812181 1052.736551 498.053269 1052.736551 454.766523 C 1052.736551 409.220543 1064.032727 374.609465 1086.625081 350.933289 C 1109.217434 327.252025 1141.793165 315.416481 1184.357362 315.416481 C 1222.041814 315.416481 1251.14219 325.313357 1271.653401 345.102019 C 1292.26129 364.89577 1302.560147 392.006594 1302.560147 426.434491 C 1302.560147 431.945194 1302.382054 436.193981 1302.02078 439.175764 L 1261.486842 479.165247 L 1132.710428 478.081425 C 1132.710428 491.005879 1137.228899 500.719573 1146.26584 507.227596 C 1155.302781 513.73053 1170.578062 516.987085 1192.086593 516.987085 C 1211.335888 516.987085 1227.959586 515.043329 1241.967863 511.155816 C 1256.06773 507.268303 1269.623142 501.620214 1282.634098 494.211551 L 1302.560147 557.515935 C 1288.465368 566.736058 1272.421744 573.875038 1254.439452 578.932875 C 1236.548751 583.904211 1214.811243 586.387334 1189.237107 586.387334 Z M 1224.346845 424.266846 C 1225.430667 420.10965 1225.975122 416.766592 1225.975122 414.232585 C 1225.975122 404.92596 1221.909516 397.608887 1213.773216 392.276278 C 1205.642004 386.943668 1195.246469 384.277364 1182.596787 384.277364 C 1165.245452 384.277364 1152.682272 387.890105 1144.912334 395.120675 C 1137.142397 402.259656 1132.893609 412.700986 1132.171061 426.434491 Z M 1345.29226 320.972979 L 1420.79855 320.972979 L 1424.187403 362.046284 L 1428.660079 362.046284 C 1451.160841 330.961445 1480.93797 315.416481 1517.986376 315.416481 C 1543.199239 315.416481 1562.362032 322.102597 1575.464579 335.479916 C 1588.567127 348.760556 1595.120944 367.602782 1595.120944 392.006594 L 1595.120944 582.998481 L 1513.513701 582.998481 L 1513.513701 398.102459 C 1506.105037 394.759401 1496.299753 393.090417 1484.097846 393.090417 C 1459.699123 393.090417 1440.633008 399.008188 1426.894415 410.843732 L 1426.894415 582.998481 L 1345.29226 582.998481 Z M 1768.995562 588.560067 C 1746.764483 588.560067 1726.924937 586.163446 1709.4871 581.375292 C 1696.562646 572.063579 1685.943222 562.080201 1677.628829 551.414982 C 1669.314436 540.663261 1665.157239 529.906451 1665.157239 519.15473 L 1665.157239 389.833861 L 1614.054761 389.833861 L 1624.089023 320.972979 L 1665.157239 320.972979 L 1665.157239 252.112097 L 1747.848305 252.112097 L 1747.848305 320.972979 L 1833.923136 320.972979 L 1823.893963 389.833861 L 1747.848305 389.833861 L 1747.848305 482.5541 C 1747.848305 492.496771 1748.794742 500.811164 1750.692703 507.497279 C 1758.014864 509.756515 1766.146076 510.886132 1775.096515 510.886132 C 1795.429633 510.886132 1813.004856 506.59155 1827.822183 498.007473 L 1840.024089 570.801664 C 1830.809055 576.67364 1820.642496 581.10052 1809.524412 584.082304 C 1798.411417 587.069176 1784.896712 588.560067 1768.995562 588.560067 Z M 1768.995562 588.560067 "
        stroke={primaryColor}
        strokeWidth="83.978844"
        strokeOpacity="1"
        strokeMiterlimit="4"
      />
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(465.367925, 820.813666)">
          <g>
            <path d="M 98.453125 0 C 82.546875 -35.519531 66.5625 -77.570312 50.5 -126.15625 C 34.445312 -174.75 21.023438 -220.925781 10.234375 -264.6875 L 74.171875 -267.671875 C 81.835938 -234.429688 91.28125 -198.84375 102.5 -160.90625 C 113.726562 -122.96875 124.457031 -89.789062 134.6875 -61.375 L 138.953125 -61.375 C 149.179688 -89.226562 159.976562 -122.191406 171.34375 -160.265625 C 182.707031 -198.335938 192.226562 -234.140625 199.90625 -267.671875 L 264.265625 -264.6875 C 253.460938 -220.925781 240.035156 -174.75 223.984375 -126.15625 C 207.929688 -77.570312 191.945312 -35.519531 176.03125 0 Z M 98.453125 0 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(724.521453, 820.813666)">
          <g>
            <path d="M 26.859375 -286 L 90.78125 -286 L 90.78125 -228.890625 L 26.859375 -228.890625 Z M 27.28125 -201.1875 L 90.359375 -201.1875 L 90.359375 0 L 27.28125 0 Z M 27.28125 -201.1875 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(826.818846, 820.813666)">
          <g>
            <path d="M 31.96875 -201.1875 L 89.9375 -201.1875 L 92.5 -169.640625 L 95.90625 -169.640625 C 113.238281 -193.503906 136.113281 -205.4375 164.53125 -205.4375 C 183.851562 -205.4375 198.554688 -200.320312 208.640625 -190.09375 C 218.722656 -179.863281 223.765625 -165.375 223.765625 -146.625 L 223.765625 0 L 161.109375 0 L 161.109375 -141.9375 C 155.429688 -144.488281 147.90625 -145.765625 138.53125 -145.765625 C 119.769531 -145.765625 105.132812 -141.21875 94.625 -132.125 L 94.625 0 L 31.96875 0 Z M 31.96875 -201.1875 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(1060.824291, 820.813666)">
          <g>
            <path d="M 121.046875 4.265625 C 84.109375 4.265625 57.328125 -4.539062 40.703125 -22.15625 C 24.078125 -39.78125 15.765625 -64.929688 15.765625 -97.609375 C 15.765625 -130.003906 24.925781 -155.789062 43.25 -174.96875 C 61.582031 -194.144531 86.519531 -203.734375 118.0625 -203.734375 C 149.601562 -203.734375 175.320312 -197.910156 195.21875 -186.265625 L 195.21875 -170.921875 C 195.21875 -155.296875 193.367188 -139.804688 189.671875 -124.453125 L 137.25 -124.453125 L 133.84375 -143.640625 C 128.15625 -144.773438 121.332031 -145.34375 113.375 -145.34375 C 102.007812 -145.34375 92.492188 -144.207031 84.828125 -141.9375 C 80.847656 -128.863281 78.859375 -114.941406 78.859375 -100.171875 C 78.859375 -84.535156 82.050781 -73.09375 88.4375 -65.84375 C 94.832031 -58.601562 106.269531 -54.984375 122.75 -54.984375 C 142.925781 -54.984375 160.6875 -61.09375 176.03125 -73.3125 L 204.171875 -27.703125 C 193.085938 -17.753906 180.9375 -9.9375 167.71875 -4.25 C 154.507812 1.425781 138.953125 4.265625 121.046875 4.265625 Z M 121.046875 4.265625 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(1256.468113, 820.813666)">
          <g>
            <path d="M 121.90625 2.5625 C 88.09375 2.5625 62.160156 -5.960938 44.109375 -23.015625 C 26.066406 -40.066406 17.046875 -65.210938 17.046875 -98.453125 C 17.046875 -133.410156 25.710938 -159.976562 43.046875 -178.15625 C 60.378906 -196.34375 85.382812 -205.4375 118.0625 -205.4375 C 147.050781 -205.4375 169.429688 -197.835938 185.203125 -182.640625 C 200.972656 -167.441406 208.859375 -146.628906 208.859375 -120.203125 C 208.859375 -115.929688 208.710938 -112.660156 208.421875 -110.390625 L 177.3125 -79.703125 L 78.421875 -80.5625 C 78.421875 -70.613281 81.898438 -63.148438 88.859375 -58.171875 C 95.828125 -53.203125 107.550781 -50.71875 124.03125 -50.71875 C 138.8125 -50.71875 151.597656 -52.207031 162.390625 -55.1875 C 173.191406 -58.175781 183.566406 -62.515625 193.515625 -68.203125 L 208.859375 -19.609375 C 198.054688 -12.503906 185.765625 -7.03125 171.984375 -3.1875 C 158.203125 0.644531 141.507812 2.5625 121.90625 2.5625 Z M 148.75 -121.90625 C 149.601562 -125.03125 150.03125 -127.585938 150.03125 -129.578125 C 150.03125 -136.679688 146.90625 -142.289062 140.65625 -146.40625 C 134.40625 -150.53125 126.445312 -152.59375 116.78125 -152.59375 C 103.425781 -152.59375 93.765625 -149.820312 87.796875 -144.28125 C 81.835938 -138.738281 78.570312 -130.710938 78 -120.203125 Z M 148.75 -121.90625 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(1466.177894, 820.813666)">
          <g>
            <path d="M 31.96875 -201.1875 L 89.9375 -201.1875 L 92.5 -169.640625 L 95.90625 -169.640625 C 113.238281 -193.503906 136.113281 -205.4375 164.53125 -205.4375 C 183.851562 -205.4375 198.554688 -200.320312 208.640625 -190.09375 C 218.722656 -179.863281 223.765625 -165.375 223.765625 -146.625 L 223.765625 0 L 161.109375 0 L 161.109375 -141.9375 C 155.429688 -144.488281 147.90625 -145.765625 138.53125 -145.765625 C 119.769531 -145.765625 105.132812 -141.21875 94.625 -132.125 L 94.625 0 L 31.96875 0 Z M 31.96875 -201.1875 " />
          </g>
        </g>
      </g>
      <g fill={secondaryColor} fillOpacity="1">
        <g transform="translate(1700.183339, 820.813666)">
          <g>
            <path d="M 123.1875 4.265625 C 106.132812 4.265625 90.929688 2.414062 77.578125 -1.28125 C 67.628906 -8.382812 59.457031 -16.054688 53.0625 -24.296875 C 46.664062 -32.535156 43.46875 -40.773438 43.46875 -49.015625 L 43.46875 -148.328125 L 4.265625 -148.328125 L 11.9375 -201.1875 L 43.46875 -201.1875 L 43.46875 -254.03125 L 106.984375 -254.03125 L 106.984375 -201.1875 L 173.046875 -201.1875 L 165.375 -148.328125 L 106.984375 -148.328125 L 106.984375 -77.15625 C 106.984375 -69.476562 107.691406 -63.082031 109.109375 -57.96875 C 114.796875 -56.257812 121.050781 -55.40625 127.875 -55.40625 C 143.5 -55.40625 156.992188 -58.675781 168.359375 -65.21875 L 177.734375 -9.375 C 170.628906 -4.832031 162.816406 -1.425781 154.296875 0.84375 C 145.773438 3.125 135.40625 4.265625 123.1875 4.265625 Z M 123.1875 4.265625 " />
          </g>
        </g>
      </g>
    </svg>
  );
}
export const ButtonButton = (text) => {
  return (
    <div
      style={{
        display: "flex",
        alignItems: "center",
        padding: "1rem",
        justifyContent: "right",
      }}
    >
      <Link
        style={{
          ...linkReset,
          backgroundColor: primaryColor(),
          color: textPrimaryColorContrast(),
          padding: "0.5rem",
        }}
      >
        {text}
      </Link>
    </div>
  );
};

export function isDev() {
  if (window.location.hostname === "localhost") {
    return "http://localhost:3502";
  } else if (
    window.location.hostname === "arvin-staging.9kwq6c.easypanel.host" ||
    window.location.hostname.includes("easypanel")
  ) {
    return "https://arvin-backstagin.9kwq6c.easypanel.host";
  } else {
    return "https://arvin-backprod.9kwq6c.easypanel.host";
  }
}

export const backDomain = isDev();
export const updateInfo = async (id, headers) => {
  try {
    const response = await axios.get(`${backDomain}/api/v1/student/${id}`, {
      headers,
    });
    const userInfo = response.data.formattedStudentData;
    let loggedIn = JSON.parse(localStorage.getItem("loggedIn")) || {};

    loggedIn = Object.assign(loggedIn, userInfo);
    localStorage.setItem("loggedIn", JSON.stringify(loggedIn));
  } catch (error) {
    console.log(error, "Erro ao atualizar dados");
  }

  try {
    const response = await axios.get(
      `${backDomain}/api/v1/studentflashcardstoday/${id}`,
      {
        headers,
      }
    );
    const userInfo = response.data.flashcardsToday;
    localStorage.setItem("flashcardsToday", userInfo);
  } catch (error) {
    console.log(error, "Erro ao atualizar dados");
  }
};

export const onLoggOut = () => {
  const user = localStorage.getItem("loggedIn");
  const auth = localStorage.getItem("authorization");
  if (user) {
    localStorage.removeItem("loggedIn");
  }
  if (auth) {
    localStorage.removeItem("authorization");
  }
  notifyError("Faça login novamente");
  window.location.assign("/login");
};

export const onLoggOutFee = () => {
  localStorage.removeItem("authorization");
  localStorage.removeItem("loggedIn");
  notifyError("Sua mensalidade está atrasada. Fale com o professor. :)");
  window.location.assign("/login");
};

const socket = io(backDomain);

export const registerUser = (studentID) => {
  socket.emit("register", studentID);
};

export default socket;
